{"version":3,"sources":["components/Invoice/assets/arrow-right-icon.svg","components/Invoice/assets/trash.svg","components/Invoice/Invoice.js","components/Invoice/AddInvoiceItem.js","components/Invoice/InvoiceForm.js","components/customHooks.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Invoice","clientName","dateIssued","invoiceNo","yourName","yourAddress","yourTown","yourCity","postalCode","taxNumber","accountNumber","branchCode","dateDue","email","phone","website","discountAmount","items","avatar","totalAmountVatInclusive","totalAmountDue","storedVat","sessionStorage","getItem","className","src","alt","syle","color","backgroundColor","style","moment","format","map","item","i","description","rate","units","key","toFixed","arroWRight","AddInvoiceItem","handleInputChange","addItem","vatAmount","discountAmountZero","useState","toggleVatPercentage","setVatPercentage","toggleDiscount","setToggleDiscount","removeItem","styleRemove","border","type","name","placeholder","value","onChange","defaultValue","onClick","event","setItem","invoiceItems","InvoiceForm","toggleSaveForm","saveForm","setItems","fileUpload","setFileUpload","useEffect","initialState","callback","inputs","setInputs","persist","target","handleSubmit","preventDefault","useForm","Math","floor","random","message","reduce","total","file","onSubmit","method","opacity","URL","createObjectURL","files","trashIcon","id","filter","length","Number","App","setSaveForm","invoiceName","input","document","getElementById","html2canvas","allowTaint","taintTest","useCORS","scale","then","canvas","clear","imgData","toDataURL","pdf","jsPDF","addImage","save","position","width","minHeight","marginLeft","marginRight","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.026c6afe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow-right-icon.88d604b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.0c9746b7.svg\";","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport \"./Invoice.css\";\r\n\r\nimport arroWRight from \"./assets/arrow-right-icon.svg\";\r\n\r\nexport default function Invoice({\r\n  clientName,\r\n  dateIssued,\r\n  invoiceNo,\r\n  yourName,\r\n  yourAddress,\r\n  yourTown,\r\n  yourCity,\r\n  postalCode,\r\n  taxNumber,\r\n  accountNumber,\r\n  branchCode,\r\n  dateDue,\r\n  email,\r\n  phone,\r\n  website,\r\n  discountAmount,\r\n  items,\r\n  avatar,\r\n  totalAmountVatInclusive,\r\n  totalAmountDue,\r\n}) {\r\n  const storedVat = sessionStorage.getItem(\"vat\");\r\n  return (\r\n    <div className=\"Invoice\">\r\n      <header>\r\n        <h1>\r\n          <span>\r\n            <img\r\n              src={avatar}\r\n              alt=\"\"\r\n              syle={{ color: \"blue\", backgroundColor: \"blue\" }}\r\n            />\r\n          </span>\r\n          <span>Tax Invoice</span>\r\n        </h1>\r\n\r\n        <div>\r\n          <ul>\r\n            <li>{clientName}</li>\r\n            <li>\r\n              {\" \"}\r\n              <span>Date Issued:</span>{\" \"}\r\n              <span style={{ color: \"#323742\" }}>\r\n                {\" \"}\r\n                {moment(dateIssued).format(\"DD MMM YYYY\")}\r\n              </span>\r\n            </li>\r\n\r\n            <li>\r\n              {\" \"}\r\n              <span>Invoice No:</span>{\" \"}\r\n              <span style={{ color: \"#323742\" }}>{invoiceNo}</span>\r\n            </li>\r\n            {taxNumber !== \"\" && (\r\n              <li>\r\n                {\" \"}\r\n                <span>Tax Reg. No:</span>{\" \"}\r\n                <span style={{ color: \"#323742\" }}>{taxNumber}</span>\r\n              </li>\r\n            )}\r\n          </ul>\r\n          <ul>\r\n            <li>{yourName}</li>\r\n            <li>{yourAddress}</li>\r\n            <li>\r\n              {yourTown}, {yourCity}\r\n            </li>\r\n            <li>{postalCode}</li>\r\n          </ul>\r\n        </div>\r\n      </header>\r\n      <div className=\"details\">\r\n        <ul>\r\n          <li>Description</li>\r\n          <li>Rate</li>\r\n          <li>Units/Hours</li>\r\n          <li>Subtotal</li>\r\n        </ul>\r\n        {items.map((item, i) => {\r\n          return (\r\n            item.description !== \"\" &&\r\n            item.rate !== 0 &&\r\n            item.units !== 0 && (\r\n              <ul key={i}>\r\n                <li>{item.description}</li>\r\n                <li>\r\n                  <span>R</span> {item.rate}\r\n                </li>\r\n                <li>{item.units}</li>\r\n                <li>\r\n                  {\" \"}\r\n                  <span>R</span> {item.rate * item.units}\r\n                </li>\r\n              </ul>\r\n            )\r\n          );\r\n        })}\r\n        {discountAmount >= 1 && (\r\n          <ul className=\"vat\">\r\n            <li></li>\r\n            <li></li>\r\n            <li>\r\n              <span>R</span> DISCOUNT\r\n            </li>\r\n            <li>{discountAmount}</li>\r\n          </ul>\r\n        )}\r\n        {storedVat > 0 && (\r\n          <ul className=\"vat\">\r\n            <li></li>\r\n            <li></li>\r\n            <li> VAT @ 15%</li>\r\n            <li>{(totalAmountDue * storedVat).toFixed(2)}</li>\r\n          </ul>\r\n        )}\r\n      </div>\r\n      <footer>\r\n        <div className=\"total\">\r\n          <ul>\r\n            <li>Bank Info</li>\r\n            <li>DUE BY</li>\r\n            <li>TOTAL DUE</li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <span>\r\n                Account No:{\" \"}\r\n                <strong style={{ color: \"#323742\" }}>{accountNumber}</strong>\r\n              </span>\r\n              <span>\r\n                Branch Code:{\" \"}\r\n                <strong style={{ color: \"#323742\" }}>{branchCode}</strong>\r\n              </span>\r\n            </li>\r\n            {dateDue !== null && (\r\n              <li>\r\n                {moment(dateDue).format(\"DD MMM \")}'\r\n                {moment(dateDue).format(\"YY\")}\r\n              </li>\r\n            )}\r\n            <li>R{(totalAmountVatInclusive - discountAmount).toFixed(2)}</li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"contacts\">\r\n          <h2>Thank you!</h2>\r\n          <ul>\r\n            {email !== \"\" && <li>{email}</li>}\r\n            {phone !== \"\" && (\r\n              <li>\r\n                <img src={arroWRight} alt=\"icon\" />\r\n                {phone}\r\n              </li>\r\n            )}\r\n            {website !== \"\" && (\r\n              <li>\r\n                <img src={arroWRight} alt=\"icon\" />\r\n                {website}\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function AddInvoiceItem({\r\n  description,\r\n  rate,\r\n  units,\r\n  handleInputChange,\r\n  addItem,\r\n  discountAmount,\r\n  vatAmount,\r\n  totalAmountDue,\r\n  discountAmountZero,\r\n}) {\r\n  const [toggleVatPercentage, setVatPercentage] = useState(false);\r\n  const [toggleDiscount, setToggleDiscount] = useState(false);\r\n\r\n  if (totalAmountDue <= 0) {\r\n    sessionStorage.removeItem(\"vat\");\r\n  }\r\n\r\n  const onToggleVatPercentage = (event) => {\r\n    setVatPercentage(!toggleVatPercentage);\r\n    addItem(event);\r\n    vatAmount = 15 / 100;\r\n    sessionStorage.setItem(\"vat\", vatAmount);\r\n  };\r\n\r\n  const storedVat = sessionStorage.getItem(\"vat\");\r\n\r\n  const removeVatAmount = (event) => {\r\n    setVatPercentage(false);\r\n    sessionStorage.removeItem(\"vat\");\r\n    addItem(event);\r\n  };\r\n\r\n  const removeDiscountAmount = (event) => {\r\n    setToggleDiscount(false);\r\n    // discountAmount = 0;\r\n    discountAmountZero();\r\n    addItem(event);\r\n  };\r\n\r\n  const styleRemove = {\r\n    color: \"#fff\",\r\n    backgroundColor: \"#f16162\",\r\n    border: \"none\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        <li>\r\n          <input\r\n            type=\"text\"\r\n            name=\"description\"\r\n            placeholder=\"Item description\"\r\n            value={description}\r\n            onChange={handleInputChange}\r\n          />\r\n        </li>\r\n        <li>\r\n          {\" \"}\r\n          {/* <span>R</span>{\" \"} */}\r\n          <input\r\n            type=\"text\"\r\n            name=\"rate\"\r\n            placeholder=\"Price\"\r\n            value={rate}\r\n            onChange={handleInputChange}\r\n          />\r\n        </li>\r\n        <li>\r\n          {\" \"}\r\n          <input\r\n            type=\"text\"\r\n            name=\"units\"\r\n            placeholder=\"Units\"\r\n            value={units}\r\n            onChange={handleInputChange}\r\n          />\r\n        </li>\r\n        <li>{rate * units}</li>\r\n      </ul>\r\n      {(toggleDiscount || discountAmount >= 1) && (\r\n        <ul className=\"vat\">\r\n          <li></li>\r\n          <li></li>\r\n          <li>DISCOUNT</li>\r\n          <li>\r\n            <span>R</span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"discountAmount\"\r\n              placeholder=\"Discount Amount\"\r\n              defaultValue={discountAmount}\r\n              onChange={toggleDiscount && handleInputChange}\r\n            />\r\n          </li>\r\n        </ul>\r\n      )}\r\n      {storedVat > 0 && (\r\n        <ul className=\"vat\">\r\n          <li></li>\r\n          <li></li>\r\n          <li> VAT @ 15%</li>\r\n          <li>{(totalAmountDue * storedVat).toFixed(2)}</li>\r\n        </ul>\r\n      )}\r\n      <div className=\"btns\">\r\n        <button onClick={addItem}>\r\n          <span>+</span>\r\n        </button>\r\n\r\n        {!toggleDiscount && discountAmount <= 0 && (\r\n          <button onClick={() => setToggleDiscount(!false)}>\r\n            <span>ADD DISCOUNT</span>\r\n          </button>\r\n        )}\r\n        {(toggleDiscount || discountAmount >= 1) && (\r\n          <button style={styleRemove} onClick={removeDiscountAmount}>\r\n            <span>REMOVE DISCOUNT</span>\r\n          </button>\r\n        )}\r\n        {!toggleVatPercentage && storedVat <= 0 && (\r\n          <button onClick={onToggleVatPercentage}>\r\n            <span>INCLUDE VAT</span>\r\n          </button>\r\n        )}\r\n        {storedVat > 0 && (\r\n          <button style={styleRemove} onClick={removeVatAmount}>\r\n            <span>REMOVE VAT</span>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport useForm from \"../customHooks\";\r\nimport moment from \"moment\";\r\nimport Invoice from \"./Invoice\";\r\nimport AddInvoiceItem from \"./AddInvoiceItem\";\r\n\r\nimport \"./Invoice.css\";\r\n\r\nimport arroWRight from \"./assets/arrow-right-icon.svg\";\r\nimport trashIcon from \"./assets/trash.svg\";\r\n\r\nconst invoiceItems = [\r\n  // {\r\n  //   id: 1,\r\n  //   description: \"Logo Design\",\r\n  //   rate: 500,\r\n  //   units: 1,\r\n  // },\r\n  // {\r\n  //   id: 2,\r\n  //   description: \"Web Design\",\r\n  //   rate: \"2500\",\r\n  //   units: 1,\r\n  //   subtotal: 2500,\r\n  // },\r\n];\r\n\r\nexport default function InvoiceForm({ toggleSaveForm, saveForm }) {\r\n  const [items, setItems] = useState([]);\r\n  const [fileUpload, setFileUpload] = useState(null);\r\n\r\n  const handleFileUpload = (event) => {\r\n    setFileUpload({ file: URL.createObjectURL(event.target.files[0]) });\r\n  };\r\n\r\n  const handleAddItem = (event) => {\r\n    event.preventDefault();\r\n    setItems([\r\n      ...items,\r\n      {\r\n        id: (items.length += 1),\r\n        description: inputs.description,\r\n        rate: Number(inputs.rate).toFixed(2),\r\n        units: Number(inputs.units).toFixed(0),\r\n      },\r\n    ]);\r\n    inputs.description = \"\";\r\n    inputs.rate = 0;\r\n    inputs.units = 1;\r\n  };\r\n\r\n  const handleRemoveItem = (id) => {\r\n    setItems(() => {\r\n      return items.filter((i) => i.id !== id);\r\n    });\r\n  };\r\n\r\n  const submitInvoice = () => {\r\n    toggleSaveForm();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setItems(invoiceItems);\r\n  }, []);\r\n\r\n  const { inputs, handleInputChange, handleSubmit } = useForm(\r\n    {\r\n      clientName: \"\",\r\n      dateIssued: \"\",\r\n      invoiceNo: `#${moment().format(\"DDMMYYYY\")}${\r\n        Math.floor(Math.random() * 1000) + 100\r\n      }`,\r\n      yourName: \"\",\r\n      yourAddress: \"\",\r\n      yourTown: \"\",\r\n      yourCity: \"\",\r\n      postalCode: \"\",\r\n      taxNumber: \"\",\r\n      accountNumber: \"\",\r\n      branchCode: \"\",\r\n      dateDue: null,\r\n      description: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      website: \"\",\r\n      vatAmount: 0,\r\n      discountAmount: 0,\r\n      rate: 0,\r\n      units: 1,\r\n      message: \"success\",\r\n    },\r\n    submitInvoice\r\n  );\r\n\r\n  const totalAmountDue = items.reduce((total, item) => {\r\n    let totalAmount = item.rate * item.units;\r\n    return total + totalAmount;\r\n  }, 0);\r\n\r\n  const storedVat = sessionStorage.getItem(\"vat\");\r\n\r\n  let totalAmountVatInclusive = totalAmountDue + totalAmountDue * storedVat;\r\n\r\n  const discountAmountZero = () => {\r\n    inputs.discountAmount = 0;\r\n  };\r\n\r\n  const file = fileUpload && fileUpload.file;\r\n\r\n  return (\r\n    <>\r\n      {!saveForm ? (\r\n        <form onSubmit={handleSubmit} method=\"POST\" className=\"Invoice\">\r\n          <header>\r\n            <h1>\r\n              <span>\r\n                <input\r\n                  style={{ opacity: file && \"0\" }}\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  onChange={handleFileUpload}\r\n                />\r\n                <img\r\n                  src={file}\r\n                  alt=\"\"\r\n                  syle={{ color: \"blue\", backgroundColor: \"blue\" }}\r\n                />\r\n              </span>\r\n              <input type=\"submit\" name=\"submit\" value=\"Save\" />\r\n            </h1>\r\n            <div>\r\n              <ul>\r\n                <li>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"clientName\"\r\n                    placeholder=\"Client Name\"\r\n                    defaultValue={inputs.clientName}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  <span>Date Issued:</span>{\" \"}\r\n                  <span>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"dateIssued\"\r\n                      defaultValue={inputs.dateIssued}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </span>\r\n                </li>\r\n\r\n                <li>\r\n                  {\" \"}\r\n                  <span>Invoice Number:</span> <span>{inputs.invoiceNo}</span>\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  <span>Tax Reg. No:</span>{\" \"}\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"taxNumber\"\r\n                    placeholder=\"VAT Reg. no\"\r\n                    defaultValue={inputs.taxNumber}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </li>\r\n              </ul>\r\n              <ul>\r\n                <li>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"yourName\"\r\n                    placeholder=\"Your Name\"\r\n                    defaultValue={inputs.yourName}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"yourAddress\"\r\n                    placeholder=\"Your Address\"\r\n                    defaultValue={inputs.yourAddress}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"yourTown\"\r\n                    placeholder=\"Your Town\"\r\n                    defaultValue={inputs.yourTown}\r\n                    onChange={handleInputChange}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"yourCity\"\r\n                    placeholder=\"Your City\"\r\n                    defaultValue={inputs.yourCity}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"postalCode\"\r\n                    placeholder=\"Postal Code\"\r\n                    defaultValue={inputs.postalCode}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </header>\r\n          <div className=\"details\">\r\n            <ul>\r\n              <li>Description</li>\r\n              <li>Price</li>\r\n              <li>Units/Hours</li>\r\n              <li>Subtotal</li>\r\n            </ul>\r\n\r\n            {items.map((item, i) => {\r\n              return (\r\n                item.description !== \"\" &&\r\n                item.rate !== 0 &&\r\n                item.units !== 0 && (\r\n                  <ul key={i}>\r\n                    <li>\r\n                      <img\r\n                        src={trashIcon}\r\n                        alt=\"delete\"\r\n                        onClick={() => handleRemoveItem(item.id)}\r\n                      />\r\n                      {item.description}\r\n                    </li>\r\n                    <li>\r\n                      <span>R</span> {item.rate}\r\n                    </li>\r\n                    <li>{item.units}</li>\r\n                    <li>\r\n                      {\" \"}\r\n                      <span>R</span> {(item.rate * item.units).toFixed(2)}\r\n                    </li>\r\n                  </ul>\r\n                )\r\n              );\r\n            })}\r\n            <AddInvoiceItem\r\n              addItem={handleAddItem}\r\n              description={inputs.description}\r\n              rate={inputs.rate}\r\n              units={inputs.units}\r\n              vatAmount={inputs.vatAmount}\r\n              discountAmountZero={discountAmountZero}\r\n              discountAmount={inputs.discountAmount}\r\n              totalAmountDue={totalAmountDue}\r\n              handleInputChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <footer>\r\n            <div className=\"total\">\r\n              <ul>\r\n                <li>Bank Info</li>\r\n                <li>DUE BY</li>\r\n                <li>TOTAL DUE</li>\r\n              </ul>\r\n              <ul>\r\n                <li>\r\n                  <span>\r\n                    Account No:{\" \"}\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"accountNumber\"\r\n                      placeholder=\"Account Number\"\r\n                      defaultValue={inputs.accountNumber}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </span>\r\n                  <span>\r\n                    Branch Code:{\" \"}\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"branchCode\"\r\n                      placeholder=\"Branch Code\"\r\n                      defaultValue={inputs.branchCode}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </span>\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"dateDue\"\r\n                    defaultValue={inputs.dateDue}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </li>\r\n                <li>\r\n                  R{\" \"}\r\n                  {(totalAmountVatInclusive - inputs.discountAmount).toFixed(2)}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div className=\"contacts\">\r\n              <h2>Thank you!</h2>\r\n              <ul>\r\n                <li>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    placeholder=\"email\"\r\n                    defaultValue={inputs.email}\r\n                    onChange={handleInputChange}\r\n                  />{\" \"}\r\n                  <img src={arroWRight} alt=\"icon\" />\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"phone\"\r\n                    placeholder=\"phone\"\r\n                    defaultValue={inputs.phone}\r\n                    onChange={handleInputChange}\r\n                  />{\" \"}\r\n                  <img src={arroWRight} alt=\"icon\" />\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"website\"\r\n                    placeholder=\"website\"\r\n                    defaultValue={inputs.website}\r\n                    onChange={handleInputChange}\r\n                  />{\" \"}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </footer>\r\n        </form>\r\n      ) : (\r\n        <Invoice\r\n          clientName={inputs.clientName}\r\n          dateIssued={inputs.dateIssued}\r\n          invoiceNo={inputs.invoiceNo}\r\n          yourName={inputs.yourName}\r\n          yourAddress={inputs.yourAddress}\r\n          yourTown={inputs.yourTown}\r\n          yourCity={inputs.yourCity}\r\n          taxNumber={inputs.taxNumber}\r\n          accountNumber={inputs.accountNumber}\r\n          branchCode={inputs.branchCode}\r\n          dateDue={inputs.dateDue}\r\n          email={inputs.email}\r\n          phone={inputs.phone}\r\n          website={inputs.website}\r\n          postalCode={inputs.postalCode}\r\n          avatar={file}\r\n          discountAmount={inputs.discountAmount}\r\n          items={items}\r\n          totalAmountVatInclusive={totalAmountVatInclusive}\r\n          totalAmountDue={totalAmountDue}\r\n          toggleSaveForm={toggleSaveForm}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport default function useForm(initialState, callback) {\r\n  const [inputs, setInputs] = useState(initialState);\r\n\r\n  const handleSubmit = (event) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    callback();\r\n  };\r\n\r\n  const handleInputChange = (event, value) => {\r\n    event.persist();\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  return { inputs, handleInputChange, handleSubmit };\r\n}\r\n","import React, { useState } from \"react\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nimport InvoiceForm from \"./components/Invoice/InvoiceForm\";\nimport moment from \"moment\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [saveForm, setSaveForm] = useState(false);\n\n  const invoiceName = `INVOICE${moment().format(\"DDMMYYYY\")}${\n    Math.floor(Math.random() * 100) + 10\n  }`;\n\n  const printDocument = () => {\n    const input = document.getElementById(\"divToPrint\");\n    html2canvas(input, {\n      allowTaint: true,\n      taintTest: false,\n      useCORS: true,\n      scale: 1,\n    }).then((canvas) => {\n      sessionStorage.clear();\n      // window.location.assign(\n      //   \"https://thabisoddx.github.io/taevo-invoice-generator\"\n      // );\n      const imgData = canvas.toDataURL(\"image/png\");\n      const pdf = new jsPDF();\n      pdf.addImage(imgData, \"JPEG\", 0, 0);\n      // pdf.output('dataurlnewwindow');\n      pdf.save(`${invoiceName}.pdf`);\n    });\n  };\n\n  const toggleSaveForm = () => {\n    setSaveForm(!saveForm);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"mb5 btn\">\n        {saveForm && (\n          <>\n            <button onClick={toggleSaveForm}>Edit</button>\n            <button onClick={printDocument}>Print</button>\n          </>\n        )}\n      </div>\n      <div\n        id=\"divToPrint\"\n        style={{\n          position: \"relative\",\n          width: \"210mm\",\n          minHeight: \"297mm\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          backgroundColor: \"#f2f6f3\",\n          // border: \"2px solid black\",\n        }}\n      >\n        <InvoiceForm toggleSaveForm={toggleSaveForm} saveForm={saveForm} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}