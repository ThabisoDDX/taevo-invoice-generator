{"version":3,"sources":["components/Invoice/assets/arrow-right-icon.svg","components/Invoice/assets/trash.svg","components/Invoice/Invoice.js","components/Invoice/AddInvoiceItem.js","components/Invoice/InvoiceForm.js","components/customHooks.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Invoice","clientName","dateIssued","invoiceNo","yourName","yourAddress","yourTown","yourCity","postalCode","taxNumber","accountNumber","branchCode","dateDue","email","phone","website","discountAmount","items","avatar","totalAmountVatInclusive","totalAmountDue","toggleSaveForm","saveForm","invoiceName","moment","format","Math","floor","random","storedVat","sessionStorage","getItem","className","onClick","input","document","getElementById","html2canvas","allowTaint","taintTest","useCORS","scale","then","canvas","window","location","assign","imgData","toDataURL","pdf","jsPDF","addImage","save","clear","id","style","position","width","minHeight","marginLeft","marginRight","backgroundColor","src","alt","syle","color","map","item","i","description","rate","units","key","toFixed","arroWRight","AddInvoiceItem","handleInputChange","addItem","vatAmount","discountAmountZero","useState","toggleVatPercentage","setVatPercentage","toggleDiscount","setToggleDiscount","removeItem","styleRemove","border","type","name","placeholder","value","onChange","defaultValue","event","setItem","invoiceItems","InvoiceForm","setItems","fileUpload","setFileUpload","setSaveForm","useEffect","initialState","callback","inputs","setInputs","persist","target","handleSubmit","preventDefault","useForm","message","reduce","total","file","onSubmit","method","opacity","URL","createObjectURL","files","trashIcon","filter","length","Number","App","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.0878967a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow-right-icon.88d604b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.0c9746b7.svg\";","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport jsPDF from \"jspdf\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nimport \"./Invoice.css\";\r\n\r\nimport arroWRight from \"./assets/arrow-right-icon.svg\";\r\n\r\nexport default function Invoice({\r\n  clientName,\r\n  dateIssued,\r\n  invoiceNo,\r\n  yourName,\r\n  yourAddress,\r\n  yourTown,\r\n  yourCity,\r\n  postalCode,\r\n  taxNumber,\r\n  accountNumber,\r\n  branchCode,\r\n  dateDue,\r\n  email,\r\n  phone,\r\n  website,\r\n  discountAmount,\r\n  items,\r\n  avatar,\r\n  totalAmountVatInclusive,\r\n  totalAmountDue,\r\n  toggleSaveForm,\r\n  saveForm,\r\n}) {\r\n  const invoiceName = `INVOICE${moment().format(\"DDMMYYYY\")}${\r\n    Math.floor(Math.random() * 100) + 10\r\n  }`;\r\n\r\n  const printDocument = () => {\r\n    const input = document.getElementById(\"divToPrint\");\r\n    html2canvas(input, {\r\n      allowTaint: true,\r\n      taintTest: false,\r\n      useCORS: true,\r\n      scale: 1,\r\n    }).then((canvas) => {\r\n      window.location.assign(\r\n        \"https://thabisoddx.github.io/taevo-invoice-generator\"\r\n      );\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF();\r\n      pdf.addImage(imgData, \"JPEG\", 0, 0);\r\n      // pdf.output('dataurlnewwindow');\r\n      pdf.save(`${invoiceName}.pdf`);\r\n      sessionStorage.clear();\r\n    });\r\n  };\r\n\r\n  const storedVat = sessionStorage.getItem(\"vat\");\r\n  return (\r\n    <>\r\n      <div className=\"mb5 btn\">\r\n        {saveForm && (\r\n          <>\r\n            <button onClick={toggleSaveForm}>Edit</button>\r\n            <button onClick={printDocument}>Print</button>\r\n          </>\r\n        )}\r\n      </div>\r\n      <div\r\n        id=\"divToPrint\"\r\n        style={{\r\n          position: \"relative\",\r\n          width: \"210mm\",\r\n          minHeight: \"297mm\",\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          backgroundColor: \"#f2f6f3\",\r\n          // border: \"2px solid black\",\r\n        }}\r\n      >\r\n        <div className=\"Invoice\">\r\n          <header>\r\n            <h1>\r\n              <span>\r\n                <img\r\n                  src={avatar}\r\n                  alt=\"\"\r\n                  syle={{ color: \"blue\", backgroundColor: \"blue\" }}\r\n                />\r\n              </span>\r\n              <span>Tax Invoice</span>\r\n            </h1>\r\n\r\n            <div>\r\n              <ul>\r\n                <li>{clientName}</li>\r\n                <li>\r\n                  {\" \"}\r\n                  <span>Date Issued:</span>{\" \"}\r\n                  <span style={{ color: \"#323742\" }}>\r\n                    {\" \"}\r\n                    {moment(dateIssued).format(\"DD MMM YYYY\")}\r\n                  </span>\r\n                </li>\r\n\r\n                <li>\r\n                  {\" \"}\r\n                  <span>Invoice No:</span>{\" \"}\r\n                  <span style={{ color: \"#323742\" }}>{invoiceNo}</span>\r\n                </li>\r\n                {taxNumber !== \"\" && (\r\n                  <li>\r\n                    {\" \"}\r\n                    <span>Tax Reg. No:</span>{\" \"}\r\n                    <span style={{ color: \"#323742\" }}>{taxNumber}</span>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n              <ul>\r\n                <li>{yourName}</li>\r\n                <li>{yourAddress}</li>\r\n                <li>\r\n                  {yourTown}, {yourCity}\r\n                </li>\r\n                <li>{postalCode}</li>\r\n              </ul>\r\n            </div>\r\n          </header>\r\n          <div className=\"details\">\r\n            <ul>\r\n              <li>Description</li>\r\n              <li>Rate</li>\r\n              <li>Units/Hours</li>\r\n              <li>Subtotal</li>\r\n            </ul>\r\n            {items.map((item, i) => {\r\n              return (\r\n                item.description !== \"\" &&\r\n                item.rate !== 0 &&\r\n                item.units !== 0 && (\r\n                  <ul key={i}>\r\n                    <li>{item.description}</li>\r\n                    <li>\r\n                      <span>R</span> {item.rate}\r\n                    </li>\r\n                    <li>{item.units}</li>\r\n                    <li>\r\n                      {\" \"}\r\n                      <span>R</span> {item.rate * item.units}\r\n                    </li>\r\n                  </ul>\r\n                )\r\n              );\r\n            })}\r\n            {discountAmount >= 1 && (\r\n              <ul className=\"vat\">\r\n                <li></li>\r\n                <li></li>\r\n                <li>\r\n                  <span>R</span> DISCOUNT\r\n                </li>\r\n                <li>{discountAmount}</li>\r\n              </ul>\r\n            )}\r\n            {storedVat > 0 && (\r\n              <ul className=\"vat\">\r\n                <li></li>\r\n                <li></li>\r\n                <li> VAT @ 15%</li>\r\n                <li>{(totalAmountDue * storedVat).toFixed(2)}</li>\r\n              </ul>\r\n            )}\r\n          </div>\r\n          <footer>\r\n            <div className=\"total\">\r\n              <ul>\r\n                <li>Bank Info</li>\r\n                <li>DUE BY</li>\r\n                <li>TOTAL DUE</li>\r\n              </ul>\r\n              <ul>\r\n                <li>\r\n                  <span>\r\n                    Account No:{\" \"}\r\n                    <strong style={{ color: \"#323742\" }}>\r\n                      {accountNumber}\r\n                    </strong>\r\n                  </span>\r\n                  <span>\r\n                    Branch Code:{\" \"}\r\n                    <strong style={{ color: \"#323742\" }}>{branchCode}</strong>\r\n                  </span>\r\n                </li>\r\n                {dateDue !== null && (\r\n                  <li>\r\n                    {moment(dateDue).format(\"DD MMM \")}'\r\n                    {moment(dateDue).format(\"YY\")}\r\n                  </li>\r\n                )}\r\n                <li>\r\n                  R{(totalAmountVatInclusive - discountAmount).toFixed(2)}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div className=\"contacts\">\r\n              <h2>Thank you!</h2>\r\n              <ul>\r\n                {email !== \"\" && <li>{email}</li>}\r\n                {phone !== \"\" && (\r\n                  <li>\r\n                    <img src={arroWRight} alt=\"icon\" />\r\n                    {phone}\r\n                  </li>\r\n                )}\r\n                {website !== \"\" && (\r\n                  <li>\r\n                    <img src={arroWRight} alt=\"icon\" />\r\n                    {website}\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function AddInvoiceItem({\r\n  description,\r\n  rate,\r\n  units,\r\n  handleInputChange,\r\n  addItem,\r\n  discountAmount,\r\n  vatAmount,\r\n  totalAmountDue,\r\n  discountAmountZero,\r\n}) {\r\n  const [toggleVatPercentage, setVatPercentage] = useState(false);\r\n  const [toggleDiscount, setToggleDiscount] = useState(false);\r\n\r\n  if (totalAmountDue <= 0) {\r\n    sessionStorage.removeItem(\"vat\");\r\n  }\r\n\r\n  const onToggleVatPercentage = (event) => {\r\n    setVatPercentage(!toggleVatPercentage);\r\n    addItem(event);\r\n    vatAmount = 15 / 100;\r\n    sessionStorage.setItem(\"vat\", vatAmount);\r\n  };\r\n\r\n  const storedVat = sessionStorage.getItem(\"vat\");\r\n\r\n  const removeVatAmount = (event) => {\r\n    setVatPercentage(false);\r\n    sessionStorage.removeItem(\"vat\");\r\n    addItem(event);\r\n  };\r\n\r\n  const removeDiscountAmount = (event) => {\r\n    setToggleDiscount(false);\r\n    // discountAmount = 0;\r\n    discountAmountZero();\r\n    addItem(event);\r\n  };\r\n\r\n  const styleRemove = {\r\n    color: \"#fff\",\r\n    backgroundColor: \"#f16162\",\r\n    border: \"none\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        <li>\r\n          <input\r\n            type=\"text\"\r\n            name=\"description\"\r\n            placeholder=\"Item description\"\r\n            value={description}\r\n            onChange={handleInputChange}\r\n          />\r\n        </li>\r\n        <li>\r\n          {\" \"}\r\n          {/* <span>R</span>{\" \"} */}\r\n          <input\r\n            type=\"text\"\r\n            name=\"rate\"\r\n            placeholder=\"Price\"\r\n            value={rate}\r\n            onChange={handleInputChange}\r\n          />\r\n        </li>\r\n        <li>\r\n          {\" \"}\r\n          <input\r\n            type=\"text\"\r\n            name=\"units\"\r\n            placeholder=\"Units\"\r\n            value={units}\r\n            onChange={handleInputChange}\r\n          />\r\n        </li>\r\n        <li>{rate * units}</li>\r\n      </ul>\r\n      {(toggleDiscount || discountAmount >= 1) && (\r\n        <ul className=\"vat\">\r\n          <li></li>\r\n          <li></li>\r\n          <li>DISCOUNT</li>\r\n          <li>\r\n            <span>R</span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"discountAmount\"\r\n              placeholder=\"Discount Amount\"\r\n              defaultValue={discountAmount}\r\n              onChange={toggleDiscount && handleInputChange}\r\n            />\r\n          </li>\r\n        </ul>\r\n      )}\r\n      {storedVat > 0 && (\r\n        <ul className=\"vat\">\r\n          <li></li>\r\n          <li></li>\r\n          <li> VAT @ 15%</li>\r\n          <li>\r\n            <span>R</span>\r\n            <span>{(totalAmountDue * storedVat).toFixed(2)}</span>\r\n          </li>\r\n        </ul>\r\n      )}\r\n      <div className=\"btns\">\r\n        <button onClick={addItem}>\r\n          <span>+</span>\r\n        </button>\r\n\r\n        {!toggleDiscount && discountAmount <= 0 && (\r\n          <button onClick={() => setToggleDiscount(!false)}>\r\n            <span>ADD DISCOUNT</span>\r\n          </button>\r\n        )}\r\n        {(toggleDiscount || discountAmount >= 1) && (\r\n          <button style={styleRemove} onClick={removeDiscountAmount}>\r\n            <span>REMOVE DISCOUNT</span>\r\n          </button>\r\n        )}\r\n        {!toggleVatPercentage && storedVat <= 0 && (\r\n          <button onClick={onToggleVatPercentage}>\r\n            <span>INCLUDE VAT</span>\r\n          </button>\r\n        )}\r\n        {storedVat > 0 && (\r\n          <button style={styleRemove} onClick={removeVatAmount}>\r\n            <span>REMOVE VAT</span>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport useForm from \"../customHooks\";\r\nimport moment from \"moment\";\r\nimport Invoice from \"./Invoice\";\r\nimport AddInvoiceItem from \"./AddInvoiceItem\";\r\n\r\nimport \"./Invoice.css\";\r\n\r\nimport arroWRight from \"./assets/arrow-right-icon.svg\";\r\nimport trashIcon from \"./assets/trash.svg\";\r\n\r\nconst invoiceItems = [\r\n  // {\r\n  //   id: 1,\r\n  //   description: \"Logo Design\",\r\n  //   rate: 500,\r\n  //   units: 1,\r\n  // },\r\n  // {\r\n  //   id: 2,\r\n  //   description: \"Web Design\",\r\n  //   rate: \"2500\",\r\n  //   units: 1,\r\n  //   subtotal: 2500,\r\n  // },\r\n];\r\n\r\nexport default function InvoiceForm() {\r\n  const [items, setItems] = useState([]);\r\n  const [fileUpload, setFileUpload] = useState(null);\r\n  const [saveForm, setSaveForm] = useState(false);\r\n\r\n  const toggleSaveForm = () => {\r\n    setSaveForm(!saveForm);\r\n  };\r\n\r\n  const handleFileUpload = (event) => {\r\n    setFileUpload({ file: URL.createObjectURL(event.target.files[0]) });\r\n  };\r\n\r\n  const handleAddItem = (event) => {\r\n    event.preventDefault();\r\n    setItems([\r\n      ...items,\r\n      {\r\n        id: (items.length += 1),\r\n        description: inputs.description,\r\n        rate: Number(inputs.rate).toFixed(2),\r\n        units: Number(inputs.units).toFixed(0),\r\n      },\r\n    ]);\r\n    inputs.description = \"\";\r\n    inputs.rate = 0;\r\n    inputs.units = 1;\r\n  };\r\n\r\n  const handleRemoveItem = (id) => {\r\n    setItems(() => {\r\n      return items.filter((i) => i.id !== id);\r\n    });\r\n  };\r\n\r\n  const submitInvoice = () => {\r\n    toggleSaveForm();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setItems(invoiceItems);\r\n  }, []);\r\n\r\n  const { inputs, handleInputChange, handleSubmit } = useForm(\r\n    {\r\n      clientName: \"\",\r\n      dateIssued: \"\",\r\n      invoiceNo: `#${moment().format(\"DDMMYYYY\")}${\r\n        Math.floor(Math.random() * 1000) + 100\r\n      }`,\r\n      yourName: \"\",\r\n      yourAddress: \"\",\r\n      yourTown: \"\",\r\n      yourCity: \"\",\r\n      postalCode: \"\",\r\n      taxNumber: \"\",\r\n      accountNumber: \"\",\r\n      branchCode: \"\",\r\n      dateDue: null,\r\n      description: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      website: \"\",\r\n      vatAmount: 0,\r\n      discountAmount: 0,\r\n      rate: 0,\r\n      units: 1,\r\n      message: \"success\",\r\n    },\r\n    submitInvoice\r\n  );\r\n\r\n  const totalAmountDue = items.reduce((total, item) => {\r\n    let totalAmount = item.rate * item.units;\r\n    return total + totalAmount;\r\n  }, 0);\r\n\r\n  const storedVat = sessionStorage.getItem(\"vat\");\r\n\r\n  let totalAmountVatInclusive = totalAmountDue + totalAmountDue * storedVat;\r\n\r\n  const discountAmountZero = () => {\r\n    inputs.discountAmount = 0;\r\n  };\r\n\r\n  const file = fileUpload && fileUpload.file;\r\n\r\n  return (\r\n    <>\r\n      {!saveForm ? (\r\n        <form onSubmit={handleSubmit} method=\"POST\" className=\"Invoice\">\r\n          <header>\r\n            <h1>\r\n              <span>\r\n                <input\r\n                  style={{ opacity: file && \"0\" }}\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  onChange={handleFileUpload}\r\n                />\r\n                <img\r\n                  src={file}\r\n                  alt=\"\"\r\n                  syle={{ color: \"blue\", backgroundColor: \"blue\" }}\r\n                />\r\n              </span>\r\n              <input type=\"submit\" name=\"submit\" value=\"Save\" />\r\n            </h1>\r\n            <div>\r\n              <ul>\r\n                <li>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"clientName\"\r\n                    placeholder=\"Client Name\"\r\n                    defaultValue={inputs.clientName}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  <span>Date Issued:</span>{\" \"}\r\n                  <span>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"dateIssued\"\r\n                      defaultValue={inputs.dateIssued}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </span>\r\n                </li>\r\n\r\n                <li>\r\n                  {\" \"}\r\n                  <span>Invoice Number:</span> <span>{inputs.invoiceNo}</span>\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  <span>Tax Reg. No:</span>{\" \"}\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"taxNumber\"\r\n                    placeholder=\"VAT Reg. no\"\r\n                    defaultValue={inputs.taxNumber}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </li>\r\n              </ul>\r\n              <ul>\r\n                <li>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"yourName\"\r\n                    placeholder=\"Your Name\"\r\n                    defaultValue={inputs.yourName}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"yourAddress\"\r\n                    placeholder=\"Your Address\"\r\n                    defaultValue={inputs.yourAddress}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"yourTown\"\r\n                    placeholder=\"Your Town\"\r\n                    defaultValue={inputs.yourTown}\r\n                    onChange={handleInputChange}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"yourCity\"\r\n                    placeholder=\"Your City\"\r\n                    defaultValue={inputs.yourCity}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"postalCode\"\r\n                    placeholder=\"Postal Code\"\r\n                    defaultValue={inputs.postalCode}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </header>\r\n          <div className=\"details\">\r\n            <ul>\r\n              <li>Description</li>\r\n              <li>Price</li>\r\n              <li>Units/Hours</li>\r\n              <li>Subtotal</li>\r\n            </ul>\r\n\r\n            {items.map((item, i) => {\r\n              return (\r\n                item.description !== \"\" &&\r\n                item.rate !== 0 &&\r\n                item.units !== 0 && (\r\n                  <ul key={i}>\r\n                    <li>\r\n                      <img\r\n                        src={trashIcon}\r\n                        alt=\"delete\"\r\n                        onClick={() => handleRemoveItem(item.id)}\r\n                      />\r\n                      {item.description}\r\n                    </li>\r\n                    <li>{item.rate}</li>\r\n                    <li>{item.units}</li>\r\n                    <li>\r\n                      {\" \"}\r\n                      <span>R</span> {(item.rate * item.units).toFixed(2)}\r\n                    </li>\r\n                  </ul>\r\n                )\r\n              );\r\n            })}\r\n            <AddInvoiceItem\r\n              addItem={handleAddItem}\r\n              description={inputs.description}\r\n              rate={inputs.rate}\r\n              units={inputs.units}\r\n              vatAmount={inputs.vatAmount}\r\n              discountAmountZero={discountAmountZero}\r\n              discountAmount={inputs.discountAmount}\r\n              totalAmountDue={totalAmountDue}\r\n              handleInputChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <footer>\r\n            <div className=\"total\">\r\n              <ul>\r\n                <li>Bank Info</li>\r\n                <li>DUE BY</li>\r\n                <li>TOTAL DUE</li>\r\n              </ul>\r\n              <ul>\r\n                <li>\r\n                  <span>\r\n                    Account No:{\" \"}\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"accountNumber\"\r\n                      placeholder=\"Account Number\"\r\n                      defaultValue={inputs.accountNumber}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </span>\r\n                  <span>\r\n                    Branch Code:{\" \"}\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"branchCode\"\r\n                      placeholder=\"Branch Code\"\r\n                      defaultValue={inputs.branchCode}\r\n                      onChange={handleInputChange}\r\n                    />\r\n                  </span>\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"dateDue\"\r\n                    defaultValue={inputs.dateDue}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </li>\r\n                <li>\r\n                  R{\" \"}\r\n                  {(totalAmountVatInclusive - inputs.discountAmount).toFixed(2)}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div className=\"contacts\">\r\n              <h2>Thank you!</h2>\r\n              <ul>\r\n                <li>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    placeholder=\"email\"\r\n                    defaultValue={inputs.email}\r\n                    onChange={handleInputChange}\r\n                  />{\" \"}\r\n                  <img src={arroWRight} alt=\"icon\" />\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"phone\"\r\n                    placeholder=\"phone\"\r\n                    defaultValue={inputs.phone}\r\n                    onChange={handleInputChange}\r\n                  />{\" \"}\r\n                  <img src={arroWRight} alt=\"icon\" />\r\n                </li>\r\n                <li>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"website\"\r\n                    placeholder=\"website\"\r\n                    defaultValue={inputs.website}\r\n                    onChange={handleInputChange}\r\n                  />{\" \"}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </footer>\r\n        </form>\r\n      ) : (\r\n        <Invoice\r\n          clientName={inputs.clientName}\r\n          dateIssued={inputs.dateIssued}\r\n          invoiceNo={inputs.invoiceNo}\r\n          yourName={inputs.yourName}\r\n          yourAddress={inputs.yourAddress}\r\n          yourTown={inputs.yourTown}\r\n          yourCity={inputs.yourCity}\r\n          taxNumber={inputs.taxNumber}\r\n          accountNumber={inputs.accountNumber}\r\n          branchCode={inputs.branchCode}\r\n          dateDue={inputs.dateDue}\r\n          email={inputs.email}\r\n          phone={inputs.phone}\r\n          website={inputs.website}\r\n          postalCode={inputs.postalCode}\r\n          avatar={file}\r\n          discountAmount={inputs.discountAmount}\r\n          items={items}\r\n          saveForm={saveForm}\r\n          toggleSaveForm={toggleSaveForm}\r\n          totalAmountVatInclusive={totalAmountVatInclusive}\r\n          totalAmountDue={totalAmountDue}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport default function useForm(initialState, callback) {\r\n  const [inputs, setInputs] = useState(initialState);\r\n\r\n  const handleSubmit = (event) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    callback();\r\n  };\r\n\r\n  const handleInputChange = (event, value) => {\r\n    event.persist();\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  return { inputs, handleInputChange, handleSubmit };\r\n}\r\n","import React from \"react\";\nimport InvoiceForm from \"./components/Invoice/InvoiceForm\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <InvoiceForm />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}